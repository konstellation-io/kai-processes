name: Test
on:
  push:
    branches:
      - main
      - develop
      - 'release/**'
      - 'hotfix/**'
  pull_request:
    paths:
      - 'github-webhook-trigger/**/*'
      - 'gitlab-webhook-trigger/**/*'
      - 'cronjob-trigger/**/*'
      - 'process-trigger/**/*'
      - 'rest-trigger/**/*'
      - 'kafka-trigger/**/*'
      - '.github/workflows/test.yaml'
    branches:
      # Destination branches
      - 'develop'

jobs:
  check-folder-changes:
    runs-on: ubuntu-latest
    name: Check folder changes
    outputs:
      github-webhook-trigger: ${{ steps.filter.outputs.github-webhook-trigger }}
      gitlab-webhook-trigger: ${{ steps.filter.outputs.gitlab-webhook-trigger }}
      cronjob-trigger: ${{ steps.filter.outputs.cronjob-trigger }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            github-webhook-trigger:
              - 'github-webhook-trigger/**/*'
              - '.github/workflows/test.yaml'
            gitlab-webhook-trigger:
              - 'gitlab-webhook-trigger/**/*'
              - '.github/workflows/test.yaml'
            cronjob-trigger:
              - 'cronjob-trigger/**/*'
              - '.github/workflows/test.yaml'
            process-trigger:
              - 'process-trigger/**/*'
              - '.github/workflows/test.yaml'
            rest-trigger:
              - 'rest-trigger/**/*'
              - '.github/workflows/test.yaml'
            kafka-trigger:
              - 'kafka-trigger/**/*'
              - '.github/workflows/test.yaml'

  unit-tests:
    runs-on: ubuntu-latest
    name: Linting and Unit tests
    needs: check-folder-changes
    strategy:
      fail-fast: true
      matrix:
        include:
          - component: github-webhook-trigger
            changes: ${{ needs.check-folder-changes.outputs.github-webhook-trigger }}
          - component: gitlab-webhook-trigger
            changes: ${{ needs.check-folder-changes.outputs.gitlab-webhook-trigger }}
          - component: cronjob-trigger
            changes: ${{ needs.check-folder-changes.outputs.cronjob-trigger }}
          - component: process-trigger
            changes: ${{ needs.check-folder-changes.outputs.process-trigger }}
          - component: rest-trigger
            changes: ${{ needs.check-folder-changes.outputs.rest-trigger }}
          - component: kafka-trigger
            changes: ${{ needs.check-folder-changes.outputs.kafka-trigger }}
    steps:
      - name: Checkout code
        if: matrix.changes == 'true'
        uses: actions/checkout@v4
      - name: Install Go
        if: matrix.changes == 'true'
        uses: actions/setup-go@v5
        with:
          go-version: 1.20.x
      - name: Run golangci-lint
        if: matrix.changes == 'true'
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: ./${{ matrix.component }}
          args: --timeout=5m
      - name: Run unit tests
        if: matrix.changes == 'true'
        run: go test ./... -cover -v -coverpkg=./... -coverprofile=coverage-unit.out --tags=unit
        working-directory: ./${{ matrix.component }}
      - name: Run integration tests
        if: matrix.changes == 'true'
        run: go test ./... -cover -v -coverpkg=./... -coverprofile=coverage-integration.out --tags=integration
        working-directory: ./${{ matrix.component }}
      - name: Archive code coverage results
        if: matrix.changes == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report-${{ matrix.component }}
          path: |
            ${{ matrix.component }}/coverage-unit.out
            ${{ matrix.component }}/coverage-integration.out

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs:
      - check-folder-changes
      - unit-tests
    strategy:
      fail-fast: true
      matrix:
        include:
          - component: github-webhook-trigger
            changes: ${{ needs.check-folder-changes.outputs.github-webhook-trigger }}
            sonar_token_secret: GITH_SONAR_TOKEN
          - component: gitlab-webhook-trigger
            changes: ${{ needs.check-folder-changes.outputs.gitlab-webhook-trigger }}
            sonar_token_secret: GITLAB_SONAR_TOKEN
          - component: cronjob-trigger
            changes: ${{ needs.check-folder-changes.outputs.cronjob-trigger }}
            sonar_token_secret: CRONJOB_SONAR_TOKEN
          - component: process-trigger
            changes: ${{ needs.check-folder-changes.outputs.process-trigger }}
            sonar_token_secret: PROCESS_SONAR_TOKEN
          - component: rest-trigger
            changes: ${{ needs.check-folder-changes.outputs.rest-trigger }}
            sonar_token_secret: REST_SONAR_TOKEN
          - component: kafka-trigger
            changes: ${{ needs.check-folder-changes.outputs.kafka-trigger }}
            sonar_token_secret: KAFKA_SONAR_TOKEN
    steps:
      - uses: actions/checkout@v4
        if: matrix.changes == 'true'
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Download code coverage results
        if: matrix.changes == 'true'
        uses: actions/download-artifact@v3
        with:
          name: coverage-report-${{ matrix.component }}
          path: |
            ${{ matrix.component }}
      - name: SonarCloud Scan
        if: matrix.changes == 'true'
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: ${{ matrix.component }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets[matrix.sonar_token_secret] }}
